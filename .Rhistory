install.packages("lattice")
install.packages("lattice")
libraryy(lattice)
library(lattice)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(Diet)
head(BodyWeight)
summary(BodyWeight)
?xyplot
?axis
?lpoints
?splom
?print.trellis
?par
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
ls
setwd("C:/Users/kamaral/Desktop/Kayla Documents/Coursera Data Science/reproducible research")
data <- read.csv("activity.csv")
top(data)
head(data)
load.package("dplyr")
install.packages(dplyr)
top(data)
insteall
install.packages('dplyr')
library(dplyr)
data1 <-filter(data, is.na(steps) = FALSE)
data1 <-filter(data, is.na(steps) == FALSE)
data1
colnames(data)
by_day <-  group_by(data, date)
head(by_day)
by_day <-  group_by(data1, date)
head(by_day)
summarise(by_day)
?summarise
mean_by_day < - mean(by_day)
mean(by_day)
?mean
tst < - mean(by_day$steps)
test<- mean(by_day$steps)
test
head(test)
head(by_day)
by_day <-  group_by(data1, date)
by_day
test <- summarise(by_day)
test
test <- summarise(by_day, mean(by_day$steps))
test
test <- summarize(by_day, mean(by_day$steps))
head(test)
by_day
head(data)
count(data)
count(by_day)
by_day2 < - group_by(data, data$date)
by_day2 <- group_by(data, data$date)
summarize(by_day2, mean = meanA(by_day2$steps))
summarize(by_day, mean = meanA(by_day2$steps))
summarize(by_day, mean = mean(by_day$steps))
kk <- summarize(group_by(data, data$date), mean = mean(data$steps))
data <- read.csv("activity.csv")
colnames(data)
kk <- summarize(group_by(data, data$date), mean = mean(data$steps))
kk <- summarize(group_by(data, date), mean = mean(steps)
kk <- summarize(group_by(data, date), mean = mean(steps))
kk
data1 <-filter(data, is.na(steps) == FALSE)
kk <- summarize(group_by(data1, date), mean = mean(steps))
head(kk)
kk <- summarize(group_by(data1, date), sum = sum(steps))
kk
?hist
hist(kk)
hist(kk$sum)
hist(kk$sum, main = "Histogram for Total # of Steps Per Day")
hist(kk$sum, main = "Histogram for Total # of Steps Per Day", xlab = "Total Steps Per Day")
kk <- summarize(group_by(data1, date), sum = sum(steps), mean = mean(steps), median = median(steps))
kk
kk <- summarize(group_by(data1, date), sum = sum(steps), mean = mean(steps), median = median(steps))
?plot
by_int <- summarize(group_by(data1, interval), sum = sum(steps))
by_int
by_int <- summarize(group_by(data1, interval), mean = mean(steps))
by_int
plot(by_int$interval, by_int$mean, type = l)
plot(by_int$interval, by_int$mean, type = "l")
?plot
plot(by_int$interval, by_int$mean, type = "l", main = "Average steps per Interval", xlab = "Interval", ylab = "Average Steps")
by_int
max(by_int$mean)
select(by_int, max(by_int$mean))
?Select
?select
filter(by_int, mean = max(by_int$mean))
arrange(by_int, desc(mean))
sort <- filter(by_int, mean = max(by_int$mean))
?top
?head
head(arrange(by_int, desc(mean)), 1)
count(filter(data, is.na(steps) = true))
count(filter(data, is.na(steps) == true))
count(filter(data, is.na(steps) == TRUE))
DATA
data
data3 <- data[which(is.na(data$steps)),] <- 0
data3 <- read.csv("activity.csv")
data3[is.na(data3$steps)] <- 0
data3[is.na(data3)] <- 0
data3
data3[is.na(data3)] <- by_int$mean
data3
data4 <- read.csv("activity.csv")
data4[is.na(data4)] <- by_int$mean
head(data4)
by_int
data4k <- summarize(group_by(data4, date), sum = sum(steps))
hist(data4k$sum, main = "Histogram for Total # of Steps Per Day", xlab = "Total Steps Per Day")
hist(kk$sum, main = "Histogram for Total # of Steps Per Day", xlab = "Total Steps Per Day")
?weekdays
library(timeDate)
install.packages('timedate')
y
install.packages('timeDate')
library(timeDate)
data4
data4k
data5 <-summarize(data4k, isWeekday(date))
isWeekday()
?isWeekday
isWeekday((data4k$date))
data5 <- mutate(data4k, Weekday or Weekend = isWeekday(data4k$data))
data5 <- mutate(data4k, Weekday = isWeekday(data4k$data))
data5 <- mutate(data4k, Weekday = isWeekday(data4k$date))
data5
?sub
?gsub
data5b <- gsub(TRUE, "WEEKDAY", data5$Weekday)
data5b
data5b <- gsub(FALSE, "WEEKEND", data5$Weekday)
data5b
data5
data5$Weekday <- gsub(TRUE, "WEEKDAY", data5$Weekday)
data5
data5$Weekday <- gsub(FALSE, "WEEKEND", data5$Weekday)
data56
data5
count(filter(data, is.na(date) == TRUE)
count(filter(data, is.na(date) == TRUE))
rawData <- read.csv("activity.csv")
dataReplaceNA <- rawData
dataReplaceNA[is.na(rawData)] <- by_int$mean
head(dataReplaceNA)
dataReplaceNA_byDate <- summarize(group_by(dataReplaceNA, date), sum = sum(steps))
dataReplaceNA_byDate
dataNoNa <-filter(rawData, is.na(steps) == FALSE)
by_date <- summarize(group_by(dataNoNa, date), TotalNumberOfSteps = sum(steps))
by_date
dataReplaceNA<- mutate(dataReplaceNA_byDate, Weekday = isWeekday(dataReplaceNA_byDate$date))
dataReplaceNA
dataReplaceNA_byDate <- dataReplaceNA_byDate$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA_byDate$Weekday)
dataReplaceNA_byDate$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA_byDate$Weekday)
dataReplaceNA_byDate$Weekday <- gsub(FALSE, "WEEKEND",dataReplaceNA_byDate$Weekday)
dataReplaceNA_byDate
dataReplaceNA_byDate<- mutate(dataReplaceNA_byDate, Weekday = isWeekday(dataReplaceNA_byDate$date))
dataReplaceNA_byDate
dataReplaceNA_byDate$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA_byDate$Weekday)
dataReplaceNA_byDate$Weekday <- gsub(FALSE, "WEEKEND",dataReplaceNA_byDate$Weekday)
head(dataReplaceNA_byDate, 10)
xyplot(average_steps ~  interval | day, data = week_data, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(average_steps ~  interval | day, data = data, layout = c(1,2), type ="l", ylab="Number of Steps")
library(lattice)
xyplot(average_steps ~  interval | day, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(average_steps ~  interval | Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(sum ~  interval | Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
?xyplot
xyplot(sum | Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
dataReplaceNA_byDate
xyplot(dataReplaceNA_byDate | Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(dataReplaceNA_byDate$sum ~  interval | dataReplaceNA_byDate$Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(dataReplaceNA_byDate$sum | dataReplaceNA_byDate$Weekday, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
xyplot(dataReplaceNA_byDate$sum, data = dataReplaceNA_byDate, layout = c(1,2), type ="l", ylab="Number of Steps")
head(dataReplaceNA_byDate, 10)
dataReplaceNA<- mutate(dataReplaceNA, Weekday = isWeekday(dataReplaceNA$date))
dataReplaceNA
dataReplaceNA <- rawData
dataReplaceNA[is.na(rawData)] <- by_int$mean
dataReplaceNA
head(dataReplaceNA)
ataReplaceNA<- mutate(dataReplaceNA, Weekday = isWeekday(dataReplaceNA$date))
ataReplaceNA$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA$Weekday)
dataReplaceNA<- mutate(dataReplaceNA, Weekday = isWeekday(dataReplaceNA$date))
gsub(TRUE, "WEEKDAY",dataReplaceNA$Weekday)
gsub(FALSE, "WEEKEND",dataReplaceNA$Weekday)
head(dataReplaceNA)
dataReplaceNA$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA$Weekday)
dataReplaceNAe$Weekday <- gsub(FALSE, "WEEKEND",dataReplaceNA$Weekday)
head(dataReplaceNA)
xyplot(steps ~  interval | Weekday, data = dataReplaceNA, layout = c(1,2), type ="l", ylab="Number of Steps")
dataReplaceNA_byDate2 <- summarize(group_by(dataReplaceNA, date), mean = mean(steps))
head(dataReplaceNA_byDate2 )
dataReplaceNA<- mutate(dataReplaceNA, Weekday = isWeekday(dataReplaceNA$date))
dataReplaceNA$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA$Weekday)
dataReplaceNA$Weekday <- gsub(FALSE, "WEEKEND",dataReplaceNA$Weekday)
dataReplaceNA
dataReplaceNA_byDate2 <- summarize(group_by(dataReplaceNA, date), Weekday, mean = mean(steps))
dataReplaceNA_byDate2 <- summarize(group_by(dataReplaceNA, date), mean = mean(steps))
dataReplaceNA_byDate2
dataReplaceNA_byDate2<- mutate(dataReplaceNA_byDate2, Weekday = isWeekday(dataReplaceNA_byDate2$date))
head(dataReplaceNA_byDate2)
gsub(TRUE, "WEEKDAY",dataReplaceNA_byDate2$Weekday)
dataReplaceNA_byDate2$Weekday <- gsub(TRUE, "WEEKDAY",dataReplaceNA_byDate2$Weekday)
dataReplaceNA_byDate2$Weekday <- gsub(FALSE, "WEEKEND",dataReplaceNA_byDate2$Weekday)
head(dataReplaceNA_byDate2, 10)
dataReplaceNA_byDate2 <- summarize(mean = mean(steps))
head(dataReplaceNA_byDate)
dataReplaceNA
head(dataReplaceNA)
xyplot(steps ~  interval | Weekday, data = dataReplaceNA, layout = c(1,2), type ="l", ylab="Number of Steps")
knit2html()
library(knitr)
install.pacakges('knitr')
install.packages('knitr')
install.packages("knitr")
library(knitr)
knit2html(PA1_template.Rmd)
setwd("C:/Users/kamaral/Desktop/Kayla Documents/Coursera Data Science/reproducible research")
knit2html(PA1_template.Rmd)
?knit2html
mywd
wd
setwd("C:/Users/kamaral/Desktop/Kayla Documents/Coursera Data Science/reproducible research")
knit2html(input = "PA1_template.Rmd")
render_html(input = "PA1_template.Rmd")
knit2html(input = "PA1_template.Rmd")
render(input = "PA1_template.Rmd")
?render_markdown
render_html(input = "PA1_template.Rmd")
